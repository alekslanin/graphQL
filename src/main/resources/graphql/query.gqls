scalar BigDecimal
scalar Email
scalar Key
directive @uppercase(condition: String!) on FIELD_DEFINITION
scalar CursorString

type Query {
	# test gql query
	firstQuery: String

	# test gql query with arguments
	secondQuery(firstName: String!, lastName: String): String

	#locations
	# getAllLocations: [LocationResponse]
	getAllLocations(filter: MemberType): [LocationResponse]

	getLocationByName(filter: MemberType, name: String!): [LocationResponse]

	# get paginated members response
	getPaginatedLocation(page: PageInput, filter: MemberType): [LocationResponse]

	getPaginatedLocation2(page: PageInput, filter: MemberType): LocationResponseConnection!
}

enum MemberType {
	WINE
	OTHER
	BLAH
}

type LocationResponse {
    year: String
    title: String! @uppercase (condition: "pocono")
    country: String
    total: String!
    actors: String
    mark: BigDecimal
    type: MemberType
    regionDetailsData: [LocationDetailsResponse]
}

interface LocationDetailsResponse {
    region: String!
}

type WineData implements LocationDetailsResponse {
    region: String!
    wine: String
}

type BlahData implements LocationDetailsResponse {
    region: String!
    blah: String
}

type OtherData implements LocationDetailsResponse {
    region: String!
    other: String
}


# Pagination

type LocationResponseConnection {
	pageInfo: PageInfo!
	edges: [LocationResponseEdge!]!
}

type PageInfo {
	startCursor: CursorString
	endCursor: CursorString
	hasPreviousPage: Boolean
	hasNextPage: Boolean
}

type LocationResponseEdge {
	node: LocationResponse!
	cursor: CursorString!
}

input PageInput {
	offset: Int
	limit: Int
	after: CursorString
	before: CursorString
}